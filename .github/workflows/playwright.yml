name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    # Installation des dépendances
    - name: Install dependencies
      run: npm ci

    # Installation des navigateurs
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium

    # Lancement des tests que sur chrome  
    - name: Run Playwright tests 
      run: npx playwright test tests/autoExercisePOM_2.spec.ts --project chromium
    
    # Génération du rapport Allure
    - name: Generate Allure Report
      run: npm run allure:generate
    
    # Publier le rapport Allure dans les artefacts GitHub Actions
    - name: Upload Allure Report
      uses: actions/upload-artifact@v2
      with:
        name: allure-report
        path: allure-report
  
  allure-report:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Download Allure Report
      uses: actions/download-artifact@v2
      with:
        name: allure-report
        path: allure-report
    
     # Compresser le rapport Allure pour le télécharger
    - name: Archive Allure Report
      run: zip -r allure-report.zip allure-report

    # Upload du rapport Allure compressé en tant qu'artefact
    - name: Upload Allure Report as artifact
      uses: actions/upload-artifact@v2
      with:
        name: allure-report
        path: allure-report.zip
    
    # Installer ngrok
    - name: Install ngrok
      run: npm install -g ngrok

    # Lancer le serveur HTTP et exposer via ngrok
    - name: Serve Allure Report with ngrok
      run: |
        npx http-server allure-report -p 8080 &
        ngrok http 8080
    
    # Afficher l'URL publique générée par ngrok
    - name: Display ngrok URL
      run: curl http://127.0.0.1:4040/api/tunnels
  
    
